#!/bin/bash
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# util functions used by scripts

export PATH=/sbin:/usr/sbin:/bin:/usr/bin:$PATH

# set up variables
prog=${0##*/}
OS=`uname`

# source the config file if present
confFile=${solr_root}/conf/scripts.conf
if [[ -f $confFile ]]
then
    . $confFile
fi

function fixUser
{
# set user to $(whoami) if not specified
    if [[ -z ${user} ]]
    then
        user=$(whoami)
    fi

# sudo
    if [[ $(whoami) != ${user} ]]
    then
        sudo -u ${user} $0 "$@"
        exit $?
    fi

    oldwhoami=$(who -m | cut -d' ' -f1 | sed -e's/^.*!//')

    if [[ "${oldwhoami}" == "" ]]
    then
        oldwhoami=`ps h -Hfp $(pgrep -f -g0 $0) | tail -1|cut -f1 -d" "`
    fi
}

function setStartTime
{
    if [[ "${OS}" == "SunOS" ]]
    then
        start=`perl -e "print time;"`
    else
        start=`date +"%s"`
    fi
}

function timeStamp
{
    date +'%Y/%m/%d %H:%M:%S'
}

function curlUrl
{
    curl_url=""
    if [[ -n ${solr_url} ]]
    then
      curl_url=${solr_url}
    else
      if [[ -z ${solr_port} ]]
      then
        echo "Solr port number missing in $confFile or command line."
        echo "$USAGE"
        exit 1
      fi

      # use default hostname if not specified
      if [[ -z ${solr_hostname} ]]
      then
        solr_hostname=localhost
      fi

      # use default webapp name if not specified
      if [[ -z ${webapp_name} ]]
      then
        webapp_name=solr
      fi
      curl_url=http://${solr_hostname}:${solr_port}/${webapp_name}/update
    fi
}

function dataDir
{
    # use default value for data_dir if not specified
    # relative path starts at ${solr_root}
    if [[ -z ${data_dir} ]]
    then
        data_dir=${solr_root}/data
    elif [[ "`echo ${data_dir}|cut -c1`" != "/" ]]
    then
        data_dir=${solr_root}/${data_dir}
    fi
}

function logMessage
{
    echo $(timeStamp) $@>>$log
    if [[ -n ${verbose} ]]
    then
	echo $@
    fi
}

function logExit
{
    if [[ "${OS}" == "SunOS" ]]
    then
        end=`perl -e "print time;"`
    else
        end=`date +"%s"`
    fi
    diff=`expr $end - $start`
    echo "$(timeStamp) $1 (elapsed time: $diff sec)">>$log
    exit $2
}

# create logs directory if not there
if [[ ! -d ${solr_root}/logs ]]
then
    mkdir ${solr_root}/logs
fi

umask 002
