<?xml version="1.0" ?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<!-- The Solr schema file, version 1.6  -->

<schema name="test" version="1.6">
  <!-- attribute "name" is the name of this schema and is only used for display purposes.
       Applications should change this to reflect the nature of the search collection.
       version="x.y" is Solr's version number for the schema syntax and semantics.  It should
       not normally be changed by applications.
       1.0: multiValued attribute did not exist, all fields are multiValued by nature
       1.1: multiValued attribute introduced, false by default 
       1.2: omitTermFreqAndPositions attribute introduced, true by default except for text fields.
       1.3: removed optional field compress feature
       1.4: default auto-phrase (QueryParser feature) to off
       1.5: omitNorms defaults to true for primitive field types (int, float, boolean, string...)
       1.6: useDocValuesAsStored defaults to true.
     -->
  <types>
    <fieldType name="int" class="solr.TrieIntField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="float" class="solr.TrieFloatField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="long" class="solr.TrieLongField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" positionIncrementGap="0"/>  

    <fieldType name="tint" class="solr.TrieIntField" precisionStep="8" positionIncrementGap="0"/>
    <fieldType name="tfloat" class="solr.TrieFloatField" precisionStep="8" positionIncrementGap="0"/>
    <fieldType name="tlong" class="solr.TrieLongField" precisionStep="8" positionIncrementGap="0"/>
    <fieldType name="tdouble" class="solr.TrieDoubleField" precisionStep="8" positionIncrementGap="0"/>
    <fieldType name="currency" class="solr.CurrencyField" currencyConfig="currency.xml" multiValued="false" />

    <!-- Field type demonstrating an Analyzer failure -->
    <fieldType name="failtype1" class="solr.TextField">
      <analyzer type="index">
          <tokenizer class="solr.MockTokenizerFactory"/>
          <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="0" catenateWords="0" catenateNumbers="0" catenateAll="0"/>
          <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>

    <!-- Demonstrating ignoreCaseChange -->
    <fieldType name="wdf_nocase" class="solr.TextField">
      <analyzer>
          <tokenizer class="solr.MockTokenizerFactory"/>
          <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="0" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="0" preserveOriginal="0"/>
          <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>
    
     <fieldType name="wdf_preserve" class="solr.TextField">
      <analyzer>
          <tokenizer class="solr.MockTokenizerFactory"/>
          <filter class="solr.WordDelimiterFilterFactory" generateWordParts="0" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="0" preserveOriginal="1"/>
          <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>


    <!-- HighlitText optimizes storage for (long) columns which will be highlit -->
    <fieldType name="highlittext" class="solr.TextField"/>

    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"/>
    <fieldType name="string" class="solr.StrField" sortMissingLast="true"/>

    <!-- format for date is 1995-12-31T23:59:59.999Z and only the fractional
         seconds part (.999) is optional.
      -->
    <fieldType name="date" class="solr.TrieDateField" sortMissingLast="true"/>
    <fieldType name="tdate" class="solr.TrieDateField" sortMissingLast="true" precisionStep="6"/>

  <fieldType name="text" class="solr.TextField" positionIncrementGap="100" autoGeneratePhraseQueries="true" >
      <analyzer type="index">
        <tokenizer class="solr.MockTokenizerFactory"/>
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords.txt"
                />
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
        <filter class="solr.PorterStemFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.MockTokenizerFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords.txt"
                />
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
        <filter class="solr.PorterStemFilterFactory"/>
      </analyzer>
    </fieldType>


    <!-- field type that doesn't generate phrases from unquoted multiple tokens per analysis unit -->
   <fieldType name="text_np" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.MockTokenizerFactory"/>
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords.txt"
                />
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
        <filter class="solr.PorterStemFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.MockTokenizerFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords.txt"
                />
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
        <filter class="solr.PorterStemFilterFactory"/>
      </analyzer>
    </fieldType>

    <fieldType name="nametext" class="solr.TextField">
      <analyzer class="org.apache.lucene.analysis.core.WhitespaceAnalyzer"/>
    </fieldType>

    <fieldType name="teststop" class="solr.TextField">
       <analyzer>
        <tokenizer class="solr.LowerCaseTokenizerFactory"/>
        <filter class="solr.StandardFilterFactory"/>
        <filter class="solr.StopFilterFactory" words="stopwords.txt"/>
      </analyzer>
    </fieldType>

    <!-- fieldTypes in this section isolate tokenizers and tokenfilters for testing -->
    <fieldType name="lowertok" class="solr.TextField">
      <analyzer><tokenizer class="solr.LowerCaseTokenizerFactory"/></analyzer>
    </fieldType>
    <fieldType name="keywordtok" class="solr.TextField">
      <analyzer><tokenizer class="solr.MockTokenizerFactory" pattern="keyword"/></analyzer>
    </fieldType>
    <fieldType name="standardtok" class="solr.TextField">
      <analyzer><tokenizer class="solr.StandardTokenizerFactory"/></analyzer>
    </fieldType>
    <fieldType name="lettertok" class="solr.TextField">
      <analyzer><tokenizer class="solr.LetterTokenizerFactory"/></analyzer>
    </fieldType>
    <fieldType name="whitetok" class="solr.TextField">
      <analyzer><tokenizer class="solr.MockTokenizerFactory"/></analyzer>
    </fieldType>
    <fieldType name="HTMLstandardtok" class="solr.TextField">
      <analyzer>
      <charFilter class="solr.HTMLStripCharFilterFactory"/>
      <tokenizer class="solr.StandardTokenizerFactory"/>
      </analyzer>
    </fieldType>
    <fieldType name="HTMLwhitetok" class="solr.TextField">
      <analyzer>
      <charFilter class="solr.HTMLStripCharFilterFactory"/>
      <tokenizer class="solr.MockTokenizerFactory"/>
      </analyzer>
    </fieldType>
    <fieldType name="standardtokfilt" class="solr.TextField">
      <analyzer>
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.StandardFilterFactory"/>
      </analyzer>
    </fieldType>
    <fieldType name="standardfilt" class="solr.TextField">
      <analyzer>
        <tokenizer class="solr.MockTokenizerFactory"/>
        <filter class="solr.StandardFilterFactory"/>
      </analyzer>
    </fieldType>
    <fieldType name="lowerfilt" class="solr.TextField">
      <analyzer>
        <tokenizer class="solr.MockTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>
    <fieldType name="patternreplacefilt" class="solr.TextField">
      <analyzer type="index">
        <tokenizer class="solr.MockTokenizerFactory" pattern="keyword"/>
        <filter class="solr.PatternReplaceFilterFactory"
                pattern="([^a-zA-Z])" replacement="_" replace="all"
        />
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.MockTokenizerFactory" pattern="keyword"/>
      </analyzer>
    </fieldType>
    <fieldType name="porterfilt" class="solr.TextField">
      <analyzer>
        <tokenizer class="solr.MockTokenizerFactory"/>
        <filter class="solr.PorterStemFilterFactory"/>
      </analyzer>
    </fieldType>
    <fieldType name="engporterfilt" class="solr.TextField">
      <analyzer>
        <tokenizer class="solr.MockTokenizerFactory"/>
        <filter class="solr.PorterStemFilterFactory"/>
      </analyzer>
    </fieldType>
    <fieldType name="custengporterfilt" class="solr.TextField">
      <analyzer>
        <tokenizer class="solr.MockTokenizerFactory"/>
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
        <filter class="solr.PorterStemFilterFactory"/>
      </analyzer>
    </fieldType>
    <fieldType name="stopfilt" class="solr.TextField">
      <analyzer>
        <tokenizer class="solr.MockTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true"/>
      </analyzer>
    </fieldType>
    <fieldType name="custstopfilt" class="solr.TextField">
      <analyzer>
        <tokenizer class="solr.MockTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" words="stopwords.txt"/>
      </analyzer>
    </fieldType>
    <fieldType name="lengthfilt" class="solr.TextField">
      <analyzer>
        <tokenizer class="solr.MockTokenizerFactory"/>
        <filter class="solr.LengthFilterFactory" min="2" max="5"/>
      </analyzer>
    </fieldType>
    <fieldType name="limitfilt" class="solr.TextField">
      <analyzer>
        <tokenizer class="solr.MockTokenizerFactory"/>
        <filter class="solr.LimitTokenCountFilterFactory" maxTokenCount="100" />
      </analyzer>
    </fieldType>

    <fieldType name="subword" class="solr.TextField" multiValued="true" positionIncrementGap="100">
      <analyzer type="index">
          <tokenizer class="solr.MockTokenizerFactory"/>
          <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0"/>
          <filter class="solr.LowerCaseFilterFactory"/>
          <filter class="solr.StopFilterFactory"/>
          <filter class="solr.PorterStemFilterFactory"/>
      </analyzer>
      <analyzer type="query">
          <tokenizer class="solr.MockTokenizerFactory"/>
          <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0"/>
          <filter class="solr.LowerCaseFilterFactory"/>
          <filter class="solr.StopFilterFactory"/>
          <filter class="solr.PorterStemFilterFactory"/>
      </analyzer>
    </fieldType>

    <fieldType name="numericsubword" class="solr.TextField" multiValued="true" positionIncrementGap="100">
      <analyzer type="index">
          <tokenizer class="solr.MockTokenizerFactory"/>
          <filter class="solr.LowerCaseFilterFactory"/>
          <filter class="solr.WordDelimiterFilterFactory" protected="protwords.txt" splitOnNumerics="0" splitOnCaseChange="0" generateWordParts="1" generateNumberParts="0" catenateWords="0" catenateNumbers="0" catenateAll="0"/>
          <filter class="solr.StopFilterFactory"/>
          <filter class="solr.PorterStemFilterFactory"/>
      </analyzer>
      <analyzer type="query">
          <tokenizer class="solr.MockTokenizerFactory"/>
          <filter class="solr.LowerCaseFilterFactory"/>
          <filter class="solr.WordDelimiterFilterFactory" protected="protwords.txt" splitOnNumerics="0" splitOnCaseChange="0" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0"/>
          <filter class="solr.StopFilterFactory"/>
          <filter class="solr.PorterStemFilterFactory"/>
      </analyzer>
    </fieldType>

    <fieldType name="protectedsubword" class="solr.TextField" multiValued="true" positionIncrementGap="100">
      <analyzer type="index">
          <tokenizer class="solr.MockTokenizerFactory"/>
          <filter class="solr.LowerCaseFilterFactory"/>
          <filter class="solr.WordDelimiterFilterFactory" protected="protwords.txt" splitOnNumerics="0" splitOnCaseChange="0" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0"/>
      </analyzer>
      <analyzer type="query">
          <tokenizer class="solr.MockTokenizerFactory"/>
          <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>


    <!-- more flexible in matching skus, but more chance of a false match -->
    <fieldType name="skutype1" class="solr.TextField">
      <analyzer type="index">
          <tokenizer class="solr.MockTokenizerFactory"/>
          <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0"/>
          <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
      <analyzer type="query">
          <tokenizer class="solr.MockTokenizerFactory"/>
          <filter class="solr.WordDelimiterFilterFactory" generateWordParts="0" generateNumberParts="0" catenateWords="1" catenateNumbers="1" catenateAll="0"/>
          <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>

    <!-- less flexible in matching skus, but less chance of a false match -->
    <fieldType name="skutype2" class="solr.TextField">
      <analyzer type="index">
          <tokenizer class="solr.MockTokenizerFactory"/>
          <filter class="solr.WordDelimiterFilterFactory" generateWordParts="0" generateNumberParts="0" catenateWords="1" catenateNumbers="1" catenateAll="0"/>
          <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
      <analyzer type="query">
          <tokenizer class="solr.MockTokenizerFactory"/>
          <filter class="solr.WordDelimiterFilterFactory" generateWordParts="0" generateNumberParts="0" catenateWords="1" catenateNumbers="1" catenateAll="0"/>
          <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>

    <!-- less flexible in matching skus, but less chance of a false match -->
    <fieldType name="syn" class="solr.TextField">
      <analyzer>
          <tokenizer class="solr.MockTokenizerFactory"/>
          <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt"/>
      </analyzer>
    </fieldType>

    <!-- a text field with the stop filter only on the query analyzer 
     -->
    <fieldType name="text_sw" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.MockTokenizerFactory"/>
        <!-- in this example, we will only use synonyms at query time
        <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
        -->
        <!--<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>-->
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1"
                catenateNumbers="1" catenateAll="0" splitOnCaseChange="0"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.PorterStemFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.MockTokenizerFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0"
                catenateNumbers="0" catenateAll="0" splitOnCaseChange="0"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.PorterStemFilterFactory"/>
      </analyzer>
    </fieldType>

    
    <!-- Demonstrates How RemoveDuplicatesTokenFilter makes stemmed
         synonyms "better"
      -->
    <fieldType name="dedup" class="solr.TextField">
      <analyzer>
          <tokenizer class="solr.MockTokenizerFactory"/>
          <filter class="solr.SynonymFilterFactory"
                  synonyms="synonyms.txt" expand="true" />
          <filter class="solr.PorterStemFilterFactory"/>
          <filter class="solr.RemoveDuplicatesTokenFilterFactory" />
      </analyzer>
    </fieldType>

    <fieldType  name="unstored" class="solr.StrField" indexed="true" stored="false"/>


  <fieldType name="textgap" class="solr.TextField" multiValued="true" positionIncrementGap="100">
      <analyzer>
          <tokenizer class="solr.MockTokenizerFactory"/>
          <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
  </fieldType>

  <fieldType name="uuid" class="solr.UUIDField" />
  <fieldType name="ignored" class="solr.StrField" indexed="false" stored="false" />


  <fieldType name="random" class="solr.RandomSortField" indexed="true" />  
  
    <!-- Poly field -->
    <fieldType name="xy" class="solr.PointType" dimension="2" subFieldType="double"/>
    <fieldType name="xyd" class="solr.PointType" dimension="2" subFieldSuffix="*_d"/>
    <fieldType name="geohash" class="solr.GeoHashField"/>

   <fieldType name="point" class="solr.PointType" dimension="2" subFieldSuffix="_d"/>
    <!-- A specialized field for geospatial search. If indexed, this fieldType must not be multivalued. -->
    <fieldType name="location" class="solr.LatLonType" subFieldSuffix="_coordinate"/>

 </types>


 <fields>
   <field name="id" type="string" indexed="true" stored="true" multiValued="false" required="true"/>
   <field name="signatureField" type="string" indexed="true" stored="false"/>
   <field name="uuid" type="uuid" stored="true" />
   <field name="name" type="nametext" indexed="true" stored="true"/>
   <field name="text" type="text" indexed="true" stored="false" multiValued="true" />
   <field name="subject" type="text" indexed="true" stored="true"/>
   <field name="title" type="nametext" indexed="true" stored="true"/>
   <field name="weight" type="float" indexed="true" stored="true"/>
   <field name="bday" type="date" indexed="true" stored="true"/>

   <field name="text_np" type="text_np" indexed="true" stored="false"/>

   <field name="title_stemmed" type="text" indexed="true" stored="false"/>
   <field name="title_lettertok" type="lettertok" indexed="true" stored="false"/>

   <field name="syn" type="syn" indexed="true" stored="true"/>

   <!-- to test property inheritance and overriding -->
   <field name="shouldbeunstored" type="unstored" />
   <field name="shouldbestored" type="unstored" stored="true"/>
   <field name="shouldbeunindexed" type="unstored" indexed="false" stored="true"/>


   <!-- test different combinations of indexed and stored -->
   <field name="bind" type="boolean" indexed="true" stored="false"/>
   <field name="bsto" type="boolean" indexed="false" stored="true"/>
   <field name="bindsto" type="boolean" indexed="true" stored="true"/>
   <field name="isto" type="int" indexed="false" stored="true"/>
   <field name="iind" type="int" indexed="true" stored="false"/>
   <field name="ssto" type="string" indexed="false" stored="true"/>
   <field name="sind" type="string" indexed="true" stored="false"/>
   <field name="sindsto" type="string" indexed="true" stored="true"/>

   <!-- test combinations of term vector settings -->
   <field name="test_basictv" type="text" termVectors="true"/>
   <field name="test_notv" type="text" termVectors="false"/>
   <field name="test_postv" type="text" termVectors="true" termPositions="true"/>
   <field name="test_offtv" type="text" termVectors="true" termOffsets="true"/>
   <field name="test_posofftv" type="text" termVectors="true" 
     termPositions="true" termOffsets="true"/>

   <!-- test highlit field settings -->
   <field name="test_hlt" type="highlittext" indexed="true"/>
   <field name="test_hlt_off" type="highlittext" indexed="true"/>

   <!-- fields to test individual tokenizers and tokenfilters -->
   <field name="teststop" type="teststop" indexed="true" stored="true"/>
   <field name="lowertok" type="lowertok" indexed="true" stored="true"/>
   <field name="keywordtok" type="keywordtok" indexed="true" stored="true"/>
   <field name="standardtok" type="standardtok" indexed="true" stored="true"/>
   <field name="HTMLstandardtok" type="HTMLstandardtok" indexed="true" stored="true"/>
   <field name="lettertok" type="lettertok" indexed="true" stored="true"/>
   <field name="whitetok" type="whitetok" indexed="true" stored="true"/>
   <field name="HTMLwhitetok" type="HTMLwhitetok" indexed="true" stored="true"/>
   <field name="standardtokfilt" type="standardtokfilt" indexed="true" stored="true"/>
   <field name="standardfilt" type="standardfilt" indexed="true" stored="true"/>
   <field name="lowerfilt" type="lowerfilt" indexed="true" stored="true"/>
   <field name="patternreplacefilt" type="patternreplacefilt" indexed="true" stored="true"/>
   <field name="porterfilt" type="porterfilt" indexed="true" stored="true"/>
   <field name="engporterfilt" type="engporterfilt" indexed="true" stored="true"/>
   <field name="custengporterfilt" type="custengporterfilt" indexed="true" stored="true"/>
   <field name="stopfilt" type="stopfilt" indexed="true" stored="true"/>
   <field name="custstopfilt" type="custstopfilt" indexed="true" stored="true"/>
   <field name="lengthfilt" type="lengthfilt" indexed="true" stored="true"/>
   <field name="dedup" type="dedup" indexed="true" stored="true"/>
   <field name="wdf_nocase" type="wdf_nocase" indexed="true" stored="true"/>
   <field name="wdf_preserve" type="wdf_preserve" indexed="true" stored="true"/>

   <field name="numberpartfail" type="failtype1" indexed="true" stored="true"/>

   <field name="nullfirst" type="string" indexed="true" stored="true" sortMissingFirst="true"/>

   <field name="subword" type="subword" indexed="true" stored="true"/>
   <field name="numericsubword" type="numericsubword" indexed="true" stored="true"/>
   <field name="protectedsubword" type="protectedsubword" indexed="true" stored="true"/>

   <field name="sku1" type="skutype1" indexed="true" stored="true"/>
   <field name="sku2" type="skutype2" indexed="true" stored="true"/>

   <field name="textgap" type="textgap" indexed="true" stored="true"/>
   
   <!--
   <field name="timestamp" type="date" indexed="true" stored="true" default="NOW"/>
   -->
   <field name="timestamp" type="date" indexed="true" stored="true"/>

   <!-- Test a point field for distances -->
   <field name="point" type="xy" indexed="true" stored="true" multiValued="false"/>
   <field name="pointD" type="xyd" indexed="true" stored="true" multiValued="false"/>
   <field name="point_hash" type="geohash" indexed="true" stored="true" multiValued="false"/>
   <field name="store" type="location" indexed="true" stored="true"/>
   <field name="amount" type="currency" indexed="true" stored="true" multiValued="false"/>
   
   <!-- to test uniq fields -->   
   <field name="uniq" type="string" indexed="true" stored="true" multiValued="true"/>
   <field name="uniq2" type="string" indexed="true" stored="true" multiValued="true"/>
   <field name="uniq3" type="string" indexed="true" stored="true"/>
   <field name="nouniq" type="string" indexed="true" stored="true" multiValued="true"/>

   
   <field name="copyfield_source" type="string" indexed="true" stored="true" multiValued="true"/>

   <!-- for versioning -->
   <field name="_version_" type="long" indexed="true" stored="true"/>
   <!-- points to the root document of a block of nested documents -->
   <field name="_root_" type="string" indexed="true" stored="true"/>

   <field name="multi_int_with_docvals" type="tint" multiValued="true" docValues="true" indexed="false" />

   <dynamicField name="*_coordinate"  type="tdouble" indexed="true"  stored="false"/>

   <dynamicField name="*_sI" type="string"  indexed="true"  stored="false"/>
   <dynamicField name="*_sS" type="string"  indexed="false" stored="true"/>
   <dynamicField name="t_*"  type="text"    indexed="true"  stored="true"/>
   <dynamicField name="tv_*"  type="text" indexed="true"  stored="true" 
      termVectors="true" termPositions="true" termOffsets="true"/>
   <dynamicField name="tv_mv_*"  type="text" indexed="true"  stored="true" multiValued="true"
      termVectors="true" termPositions="true" termOffsets="true"/>

   <dynamicField name="*_mfacet" type="string" indexed="true" stored="false" multiValued="true" />

   <dynamicField name="*_sw" type="text_sw" indexed="true" stored="true" multiValued="true"/>

   <dynamicField name="*_i"  type="int"    indexed="true"  stored="true"/>
   <dynamicField name="*_is"  type="int"    indexed="true"  stored="true" multiValued="true"/>
   <dynamicField name="*_s1"  type="string"  indexed="true" stored="true" multiValued="false"/>
   <!-- :TODO: why are these identical?!?!?! -->
   <dynamicField name="*_s"  type="string"  indexed="true"  stored="true" multiValued="true"/>
   <dynamicField name="*_ss"  type="string"  indexed="true"  stored="true" multiValued="true"/>
   <dynamicField name="*_l"  type="long"   indexed="true"  stored="true"/>
   <dynamicField name="*_t"  type="text"    indexed="true"  stored="true"/>
   <dynamicField name="*_tt"  type="text"    indexed="true"  stored="true"/>
   <dynamicField name="*_ws"  type="nametext" indexed="true" stored="true"/>
   <dynamicField name="*_b"  type="boolean" indexed="true"  stored="true"/>
   <dynamicField name="*_f"  type="float"  indexed="true"  stored="true"/>
   <dynamicField name="*_d"  type="double" indexed="true"  stored="true"/>
   <dynamicField name="*_dt" type="date"    indexed="true"  stored="true"/>

   <!-- some trie-coded dynamic fields for faster range queries -->
   <dynamicField name="*_ti" type="tint"    indexed="true"  stored="true"/>
   <dynamicField name="*_tl" type="tlong"   indexed="true"  stored="true"/>
   <dynamicField name="*_tf" type="tfloat"  indexed="true"  stored="true"/>
   <dynamicField name="*_td" type="tdouble" indexed="true"  stored="true"/>
   <dynamicField name="*_tdt" type="tdate"  indexed="true"  stored="true"/>

   <dynamicField name="ignored_*" type="ignored" multiValued="true"/>
   <dynamicField name="attr_*" type="text" indexed="true" stored="true" multiValued="true"/>

   <dynamicField name="random_*" type="random" />

 </fields>

 <defaultSearchField>text</defaultSearchField>
 <uniqueKey>id</uniqueKey>

   <copyField source="title" dest="title_stemmed"/>
   <copyField source="title" dest="title_lettertok"/>

   <copyField source="title" dest="text"/>
   <copyField source="subject" dest="text"/>

   <copyField source="copyfield_source" dest="text"/>
   <copyField source="copyfield_source" dest="copyfield_dest_ss"/>  <!-- copyField into another stored copyField - not best practice --> 
 
</schema>
