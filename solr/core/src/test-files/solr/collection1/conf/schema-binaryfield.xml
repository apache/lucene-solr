<?xml version="1.0" ?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<!-- The Solr schema file. This file should be named "schema.xml" and
     should be located where the classloader for the Solr webapp can find it.

     This schema is used for testing, and as such has everything and the
     kitchen sink thrown in. See example/solr/conf/schema.xml for a
     more concise example.

  -->

<schema name="test" version="1.2">

  <!-- field type definitions... note that the "name" attribute is
       just a label to be used by field definitions.  The "class"
       attribute and any other attributes determine the real type and
       behavior of the fieldType.
    -->

  <!--
    Default numeric field types. For faster range queries, consider the tint/tfloat/tlong/tdouble types.
  -->
  <fieldType name="int" class="solr.TrieIntField" precisionStep="0" positionIncrementGap="0"/>
  <fieldType name="float" class="solr.TrieFloatField" precisionStep="0" positionIncrementGap="0"/>
  <fieldType name="long" class="solr.TrieLongField" precisionStep="0" positionIncrementGap="0"/>
  <fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" positionIncrementGap="0"/>

  <!--
   Numeric field types that index each value at various levels of precision
   to accelerate range queries when the number of values between the range
   endpoints is large. See the javadoc for LegacyNumericRangeQuery for internal
   implementation details.

   Smaller precisionStep values (specified in bits) will lead to more tokens
   indexed per value, slightly larger index size, and faster range queries.
   A precisionStep of 0 disables indexing at different precision levels.
  -->
  <fieldType name="tint" class="solr.TrieIntField" precisionStep="8" positionIncrementGap="0"/>
  <fieldType name="tfloat" class="solr.TrieFloatField" precisionStep="8" positionIncrementGap="0"/>
  <fieldType name="tlong" class="solr.TrieLongField" precisionStep="8" positionIncrementGap="0"/>
  <fieldType name="tdouble" class="solr.TrieDoubleField" precisionStep="8" positionIncrementGap="0"/>


  <fieldType name="binary" class="solr.BinaryField"/>
  <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"/>
  <fieldType name="string" class="solr.StrField" sortMissingLast="true"/>

  <!-- format for date is 1995-12-31T23:59:59.999Z and only the fractional
       seconds part (.999) is optional.
    -->
  <fieldType name="date" class="solr.TrieDateField" sortMissingLast="true"/>


  <field name="id" type="int" indexed="true" stored="true" multiValued="false" required="true"/>
  <field name="data" type="binary" stored="true"/>


  <uniqueKey>id</uniqueKey>


</schema>
