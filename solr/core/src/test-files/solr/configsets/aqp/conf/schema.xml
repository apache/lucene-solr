<?xml version="1.0" encoding="UTF-8" ?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->


<schema name="default-config" version="1.6">

  <field name="id" type="string" indexed="true" stored="true" required="true" multiValued="false"/>
  <!-- docValues are enabled by default for long type so we don't need to index the version field  -->
  <field name="_version_" type="plong" indexed="false" stored="false"/>

  <!-- If you don't use child/nested documents, then you should remove the next two fields:  -->
  <!-- for nested documents (minimal; points to root document) -->
  <field name="_root_" type="string" indexed="true" stored="false" docValues="false"/>

  <field name="_text_" type="text_aqp" indexed="true" stored="false" multiValued="true"/>
  <field name="_text__lit" type="text_aqp_literal" indexed="true" stored="false" multiValued="true"/>
  <field name="bill_text" type="text_aqp" indexed="true" stored="false" multiValued="true"/>
  <field name="bill_text_lit" type="text_aqp_literal" indexed="true" stored="false" multiValued="true"/>
  <field name="other_text" type="text_aqp" indexed="true" stored="false" multiValued="true"/>
  <field name="chamber" type="text_aqp" indexed="true" stored="false" multiValued="true"/>
  <field name="congressId" type="text_aqp" indexed="true" stored="false" multiValued="true"/>
  <field name="billTextContent_aqp" type="text_aqp" indexed="true" stored="false" multiValued="true"/>
  <field name="text_ss" type="string" indexed="false" stored="true" multiValued="true"/>

  <copyField source="_text_" dest="_text__lit"/>
  <copyField source="bill_text" dest="bill_text_lit"/>

  <copyField source="bill_text" dest="_text_"/>
  <copyField source="other_text" dest="_text_"/>
  <copyField source="billTextContent_aqp" dest="_text_"/>

  <copyField source="bill_text" dest="_text__lit"/>
  <copyField source="other_text" dest="_text__lit"/>
  <copyField source="billTextContent_aqp" dest="_text__lit"/>

  <!-- Field to use to determine and enforce document uniqueness.
    Unless this field is marked with required="false", it will be a required field
  -->
  <uniqueKey>id</uniqueKey>

  <!-- The StrField type is not analyzed, but indexed/stored verbatim. -->
  <fieldType name="string" class="solr.StrField" sortMissingLast="true" docValues="true"/>
  <fieldType name="strings" class="solr.StrField" sortMissingLast="true" multiValued="true" docValues="true"/>

  <!-- boolean type: "true" or "false" -->
  <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"/>
  <fieldType name="booleans" class="solr.BoolField" sortMissingLast="true" multiValued="true"/>

  <!--
    Numeric field types that index values using KD-trees.
    Point fields don't support FieldCache, so they must have docValues="true" if needed for sorting, faceting, functions, etc.
  -->
  <fieldType name="pint" class="solr.IntPointField" docValues="true"/>
  <fieldType name="pfloat" class="solr.FloatPointField" docValues="true"/>
  <fieldType name="plong" class="solr.LongPointField" docValues="true"/>
  <fieldType name="pdouble" class="solr.DoublePointField" docValues="true"/>

  <fieldType name="pints" class="solr.IntPointField" docValues="true" multiValued="true"/>
  <fieldType name="pfloats" class="solr.FloatPointField" docValues="true" multiValued="true"/>
  <fieldType name="plongs" class="solr.LongPointField" docValues="true" multiValued="true"/>
  <fieldType name="pdoubles" class="solr.DoublePointField" docValues="true" multiValued="true"/>
  <fieldType name="random" class="solr.RandomSortField" indexed="true"/>

  <!-- since fields of this type are by default not stored or indexed,
     any data added to them will be ignored outright.  -->
  <fieldType name="ignored" stored="false" indexed="false" multiValued="true" class="solr.StrField"/>


  <!-- KD-tree versions of date fields -->
  <fieldType name="pdate" class="solr.DatePointField" docValues="true"/>
  <fieldType name="pdates" class="solr.DatePointField" docValues="true" multiValued="true"/>

  <!--Binary data type. The data should be sent/retrieved in as Base64 encoded Strings -->
  <fieldType name="binary" class="solr.BinaryField"/>

  <fieldType name="text_aqp" class="solr.TextField">
    <analyzer type="index">
      <tokenizer class="solr.WhitespaceTokenizerFactory"/>
      <filter class="solr.PatternTypingFilterFactory" patternFile="patterns.txt"/>
      <filter class="solr.TokenAnalyzerFilterFactory" asType="text_en_aqp" preserveType="true"/>
      <filter class="solr.TypeAsSynonymFilterFactory" prefix="__TAS__" synFlagsMask="0"
              ignore="word,&lt;ALPHANUM&gt;,&lt;NUM&gt;,&lt;SOUTHEAST_ASIAN&gt;,&lt;IDEOGRAPHIC&gt;,&lt;HIRAGANA&gt;,&lt;KATAKANA&gt;,&lt;HANGUL&gt;,&lt;EMOJI&gt;"/>
      <filter class="solr.DropIfFlaggedFilterFactory"/>
    </analyzer>
    <analyzer type="query">
      <tokenizer class="solr.KeywordTokenizerFactory"/> <!-- query parser already handles splitting -->
      <filter class="solr.PatternTypingFilterFactory" patternFile="patterns.txt"/>
      <filter class="solr.TokenAnalyzerFilterFactory" asType="text_en_aqp" preserveType="true" />
      <filter class="solr.TypeAsSynonymFilterFactory" prefix="__TAS__" synFlagsMask="0"
              ignore="word,&lt;ALPHANUM&gt;,&lt;NUM&gt;,&lt;SOUTHEAST_ASIAN&gt;,&lt;IDEOGRAPHIC&gt;,&lt;HIRAGANA&gt;,&lt;KATAKANA&gt;,&lt;HANGUL&gt;,&lt;EMOJI&gt;"/>
      <filter class="solr.DropIfFlaggedFilterFactory"/>
    </analyzer>
  </fieldType>
  <fieldType name="text_aqp_literal" class="solr.TextField">
    <analyzer type="index">
      <tokenizer class="solr.StandardTokenizerFactory"/>
      <filter class="solr.TokenAnalyzerFilterFactory" asType="text_en_aqp_lit" preserveType="true"/>
    </analyzer>
    <analyzer type="query">
      <tokenizer class="solr.KeywordTokenizerFactory"/> <!-- query parser already handles splitting -->
      <filter class="solr.TokenAnalyzerFilterFactory" asType="text_en_aqp_lit" preserveType="true" />
    </analyzer>
  </fieldType>


  <!-- A general text field that has reasonable, generic
       cross-language defaults: it tokenizes with StandardTokenizer,
       removes stop words from case-insensitive "stopwords.txt"
       (empty by default), and down cases.  At query time only, it
       also applies synonyms.
  -->
  <fieldType name="text_general" class="solr.TextField" positionIncrementGap="100" multiValued="true">
    <analyzer type="index">
      <tokenizer class="solr.StandardTokenizerFactory"/>
      <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
      <!-- in this example, we will only use synonyms at query time
      <filter class="solr.SynonymGraphFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
      <filter class="solr.FlattenGraphFilterFactory"/>
      -->
      <filter class="solr.LowerCaseFilterFactory"/>
    </analyzer>
    <analyzer type="query">
      <tokenizer class="solr.StandardTokenizerFactory"/>
      <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
      <filter class="solr.SynonymGraphFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
      <filter class="solr.LowerCaseFilterFactory"/>
    </analyzer>
  </fieldType>

  <fieldType name="text_en_aqp" class="solr.TextField" positionIncrementGap="100">
    <analyzer type="index">
      <tokenizer class="solr.StandardTokenizerFactory"/>
      <!-- in this example, we will only use synonyms at query time
      <filter class="solr.SynonymGraphFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
      <filter class="solr.FlattenGraphFilterFactory"/>
      -->
      <!-- Case insensitive stop word removal.
      -->
      <filter class="solr.StopFilterFactory"
              ignoreCase="true"
              words="lang/stopwords_en.txt"
      />
      <filter class="solr.LowerCaseFilterFactory"/>
      <filter class="solr.EnglishPossessiveFilterFactory"/>
      <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
      <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
      <filter class="solr.EnglishMinimalStemFilterFactory"/>
      -->
      <filter class="solr.PorterStemFilterFactory"/>
    </analyzer>
    <analyzer type="query">
      <tokenizer class="solr.StandardTokenizerFactory"/>
      <filter class="solr.SynonymGraphFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
      <filter class="solr.StopFilterFactory"
              ignoreCase="true"
              words="lang/stopwords_en.txt"
      />
      <filter class="solr.LowerCaseFilterFactory"/>
      <filter class="solr.EnglishPossessiveFilterFactory"/>
      <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
      <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
      <filter class="solr.EnglishMinimalStemFilterFactory"/>
      -->
      <filter class="solr.PorterStemFilterFactory"/>
    </analyzer>
  </fieldType>
  <fieldType name="text_en_aqp_lit" class="solr.TextField" positionIncrementGap="100">
    <analyzer >
      <tokenizer class="solr.StandardTokenizerFactory"/>
      <filter class="solr.StopFilterFactory"
              ignoreCase="true"
              words="lang/stopwords_en.txt"
      />
      <filter class="solr.LowerCaseFilterFactory"/>
    </analyzer>
  </fieldType>

</schema>
