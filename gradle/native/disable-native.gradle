/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// This is the master switch to disable all tasks that compile
// native (cpp) code.
def buildNative = propertyOrDefault("build.native", true).toBoolean()

if (!buildNative) {
  // Explicitly list all projects that should be disabled if the flag above is false.
  // We could scan for projects with a the cpp-library plugin but this is faster.
  def nativeProjects = [ ":lucene:misc:native" ]

  // We just disable all tasks in the active dependency that originate in native projects.
  // Perhaps there is a cleaner way to do it but removing their references from
  // settings.gradle would remove them from IDE detection, dependency resolution, etc.
  // This way seems better.
  gradle.taskGraph.whenReady { taskGraph ->
    def tasks = taskGraph.getAllTasks()
    tasks.findAll { task -> task.project.path in nativeProjects }.each { task ->
      task.enabled = false
    }
  }
}
