/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// This checks that we're running the desired version of Gradle and
// that the JVM is supported.

import org.gradle.util.GradleVersion

configure(rootProject) {
  ext {
    expectedGradleVersion = '6.0.1'
    minJavaVersion = JavaVersion.VERSION_11
  }

  wrapper {
    distributionType = Wrapper.DistributionType.ALL
    gradleVersion = expectedGradleVersion
  }

  def currentJavaVersion = JavaVersion.current()
  if (currentJavaVersion < minJavaVersion) {
    throw new GradleException("At least Java ${minJavaVersion} is required, you are running Java ${currentJavaVersion} "
      + "[${System.getProperty('java.vm.name')} ${System.getProperty('java.vm.version')}]")
  }

  // If we're regenerating the wrapper, skip the check.
  if (!gradle.startParameter.taskNames.contains("wrapper")) {
    def currentGradleVersion = GradleVersion.current()
    if (currentGradleVersion != GradleVersion.version(expectedGradleVersion)) {
      throw new GradleException("Gradle ${expectedGradleVersion} is required (hint: use the gradlew script): this gradle is ${currentGradleVersion}")
    }
  }
}
