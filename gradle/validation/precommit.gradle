/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// This adds 'precommit' task to all projects.
//
// A precommit is essentially an alias to 'check' with some long-lasting
// tasks excluded.

allprojects {
  task precommit() {
    group = 'Precommit'
    description = "Run precommit checks"

    dependsOn check
  }
}

def taskNames = gradle.startParameter.taskNames
    .collect {it.toLowerCase(Locale.ROOT)}
    .collect {it.replaceAll("(.*:)*", "")}
    .unique()

if (taskNames.contains("precommit")) {
  // Exclude (ignore) these tasks if running precommit alias.
  def excludedTasks = [
      "test"
  ]

  // Any task names from the exclusion list explicitly passed on command
  // line should still be executed.
  excludedTasks.removeAll taskNames

  gradle.taskGraph.whenReady { TaskExecutionGraph taskGraph ->
    taskGraph.allTasks.findAll { it.name in excludedTasks }.each { task ->
      task.enabled = false
    }
  }
}
