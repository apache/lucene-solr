/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java-library'

description = 'Dynamically computed values to sort/facet/search on based on a pluggable grammar'

dependencies {
  api project(':lucene:core')

  implementation project(':lucene:codecs')

  implementation 'org.antlr:antlr4-runtime'

  // It is awkward that we force-omit the intermediate dependency here...
  // The dependency chain is:
  //   asm-commons -> asm-tree -> asm
  // Should we really go through these hoops?
  implementation 'org.ow2.asm:asm'
  implementation('org.ow2.asm:asm-commons', {
    exclude group: "org.ow2.asm", module: "asm-tree"
    exclude group: "org.ow2.asm", module: "asm-analysis"
  })

  testImplementation project(':lucene:test-framework')
}
