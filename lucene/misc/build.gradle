/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'java-library'

description = 'Index tools and other miscellaneous code'

dependencies {
  api project(':lucene:core')
  testImplementation project(':lucene:test-framework')
}

test.doFirst {
  def buildNative = propertyOrDefault("build.native", true).toBoolean()

  if (buildNative && file("${projectDir}/native/build/").exists()) {
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
      exclude '**/NativePosixUtilTest.class'
    } else if (Os.isFamily(Os.FAMILY_UNIX) || Os.isFamily(Os.FAMILY_MAC)) {
      exclude '**/WindowsDirectoryTest.class'
    }

    // This is a bit ugly, but "simpler way" like "${projectDir}/native/build/lib/main/release/**" doesn't work
    def dirWithNativeLib = file("${projectDir}/native/build/lib/main/release/").listFiles()[0]
    def libraryPath = propertyOrDefault("java.library.path", ".") + File.pathSeparator + dirWithNativeLib

    systemProperty "java.library.path",  libraryPath
  } else {
    exclude '**/NativePosixUtilTest.class'
    exclude '**/WindowsDirectoryTest.class'
  }
}